@page "/"
@using Newtonsoft.Json
@using RoletaAnalise.maui.Context
@using RoletaAnalise.maui.Models
@using System.Text.RegularExpressions

<div>
    <label for="inputNumbers">Teste</label>
    <input @bind="inputNumber" type="text" placeholder="14;8;31;22;19;16;29"/>
    <button class="btn btn-primary" @onclick="SalvaNumeros">Adicionar</button>
    <p>@message</p>
    <p>@message2</p>
    <p>@message3</p>
    <ol>
        @foreach (var numero in listaDeNumero)
        {
            <li>
                Valor: @numero.Valor <br/>
                Data do Input: @numero.DataDoInput.ToString("dd/MM/yyyy HH:mm:ss")
            </li>
        }
    </ol>
</div>

@code {
    private string inputNumber = string.Empty;
    private string? message = "";
    private string? message2 = "";
    private string? message3 = "";
    private List<Numero> listaDeNumero = new();
    private ManipulaJson _salvaJson = new();

    private void SalvaNumeros()
    {
        try
        {
            if (ConfereString(inputNumber))
            {
                var novosNumeros = ConverterInputParaNumeros(inputNumber);
                inputNumber = "";
                listaDeNumero.AddRange(novosNumeros);
                SalvaEmJson();
                message = $"Números adicionados: {string.Join(", ", listaDeNumero)}";
                message = AppContext.BaseDirectory;
            }
            else
            {
                message = "Verificar números. Parece ter caracter inválido.";
            }
        }
        catch (Exception ex)
        {
            message = $"Formato inválido: {ex.Message}. Inserir numeros sem espaços, separados por ponto e vírgula";
        }
    }

    private IEnumerable<Numero> ConverterInputParaNumeros(string input)
    {
        return input.Split(";")
                    .Select(numStr => int.TryParse(numStr, out int valor) ? valor : (int?)null)
                    .Select(valor => new Numero
                    {
                        Id = Guid.NewGuid(),
                        Valor = valor.Value,
                    });
    }

    private void SalvaEmJson()
    {
        string json = JsonConvert.SerializeObject(listaDeNumero, Formatting.Indented);

        _salvaJson.AdicionaNumero(json);
    }

    private bool ConfereString(string input)
    {
        if (Regex.IsMatch(input, @"^[0-9;]+$"))
        {
            return true;
        }
        else
        {
            return false;
        };
    }

}